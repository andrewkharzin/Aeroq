import { z } from "https://esm.sh/zod@3.23.8";
import type { ResourceDefinition } from "../core/types.ts";

const bookingSegmentFlight: ResourceDefinition = {
  name: "booking_segment_flight",
  table: "booking_segment_flight",
  key: "id",
  selectable: [
    "id",
    "booking_segment_id",
    "flight_number",
    "aircraft_type",
    "aircraft_registration",
    "scheduled_departure",
    "scheduled_arrival",
    "actual_departure",
    "actual_arrival",
    "operating_carrier",
    "marketing_carrier",
    "api_provider",
    "api_flight_id",
    "api_last_sync",
    "api_raw_data",
    "created_at",
    "updated_at"
  ],
  relations: ["booking_segment", "airlines"],
  defaultOrder: { column: "scheduled_departure", desc: false },
  createSchema: z.object({
    booking_segment_id: z.number().int(),
    flight_number: z.string(),
    aircraft_type: z.string().optional(),
    aircraft_registration: z.string().optional(),
    scheduled_departure: z.string(),
    scheduled_arrival: z.string(),
    actual_departure: z.string().optional(),
    actual_arrival: z.string().optional(),
    operating_carrier: z.string().optional(),
    marketing_carrier: z.string().optional(),
    api_provider: z.string().optional(),
    api_flight_id: z.string().optional(),
    api_last_sync: z.string().optional(),
    api_raw_data: z.record(z.any()).optional(),
  }),
  updateSchema: z.object({
    booking_segment_id: z.number().int().optional(),
    flight_number: z.string().optional(),
    aircraft_type: z.string().optional(),
    aircraft_registration: z.string().optional(),
    scheduled_departure: z.string().optional(),
    scheduled_arrival: z.string().optional(),
    actual_departure: z.string().optional(),
    actual_arrival: z.string().optional(),
    operating_carrier: z.string().optional(),
    marketing_carrier: z.string().optional(),
    api_provider: z.string().optional(),
    api_flight_id: z.string().optional(),
    api_last_sync: z.string().optional(),
    api_raw_data: z.record(z.any()).optional(),
  }),
  allow: { list: true, get: true, create: true, update: true, delete: true },
  rbac: ({ roles, method }) => (roles.includes("admin") ? true : method !== "DELETE"),
};

export default bookingSegmentFlight;
