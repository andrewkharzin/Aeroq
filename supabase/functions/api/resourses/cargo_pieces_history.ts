import { z } from "https://esm.sh/zod@3.23.8";
import type { ResourceDefinition } from "../core/types.ts";

const cargoPiecesHistory: ResourceDefinition = {
  name: "cargo_pieces_history",
  table: "cargo_pieces_history",
  key: ["id", "version"],
  selectable: [
    "id",
    "booking_id",
    "piece_number",
    "weight_value",
    "weight_unit",
    "length_cm",
    "width_cm",
    "height_cm",
    "is_stackable",
    "handling_instruction",
    "handling_code",
    "special_handling_codes",
    "owner_id",
    "created_by",
    "version",
    "changed_at",
    "changed_by",
    "change_reason"
  ],
  relations: ["cargo_pieces", "auth.users"],
  defaultOrder: { column: "changed_at", desc: true },
  createSchema: z.object({
    id: z.number().int(),
    booking_id: z.number().int().optional(),
    piece_number: z.number().int(),
    weight_value: z.number(),
    weight_unit: z.enum(["KG", "LB"]),
    length_cm: z.number().int(),
    width_cm: z.number().int(),
    height_cm: z.number().int(),
    is_stackable: z.boolean(),
    handling_instruction: z.string().optional(),
    handling_code: z.string().optional(),
    special_handling_codes: z.array(z.string()).optional(),
    owner_id: z.string().uuid().optional(),
    created_by: z.string().uuid(),
    version: z.number().int(),
    changed_by: z.string().uuid(),
    change_reason: z.string().optional(),
  }),
  updateSchema: z.object({
    id: z.number().int().optional(),
    booking_id: z.number().int().optional(),
    piece_number: z.number().int().optional(),
    weight_value: z.number().optional(),
    weight_unit: z.enum(["KG", "LB"]).optional(),
    length_cm: z.number().int().optional(),
    width_cm: z.number().int().optional(),
    height_cm: z.number().int().optional(),
    is_stackable: z.boolean().optional(),
    handling_instruction: z.string().optional(),
    handling_code: z.string().optional(),
    special_handling_codes: z.array(z.string()).optional(),
    owner_id: z.string().uuid().optional(),
    created_by: z.string().uuid().optional(),
    version: z.number().int().optional(),
    changed_by: z.string().uuid().optional(),
    change_reason: z.string().optional(),
  }),
  allow: { list: true, get: true, create: true, update: true, delete: true },
  rbac: ({ roles, method }) => (roles.includes("admin") ? true : method !== "DELETE"),
};

export default cargoPiecesHistory;
