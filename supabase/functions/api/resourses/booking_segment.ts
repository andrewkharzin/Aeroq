import { z } from "https://esm.sh/zod@3.23.8";
import type { ResourceDefinition } from "../core/types.ts";

const bookingSegment: ResourceDefinition = {
  name: "booking_segment",
  table: "booking_segment",
  key: "id",
  selectable: [
    "id",
    "onload_location_code",
    "offload_location_code",
    "booking_closed_on",
    "allocation_code",
    "active_allotment_business_id",
    "pieces",
    "departure_offset_days",
    "arrival_offset_days",
    "transport_means_id",
    "created_at",
    "updated_at",
    "booking_id",
    "sequence",
    "status",
    "transport_type",
    "transport_details",
    "carrier_code",
    "vehicle_number"
  ],
  relations: ["location", "booking"],
  defaultOrder: { column: "sequence", desc: false },
  createSchema: z.object({
    onload_location_code: z.string(),
    offload_location_code: z.string(),
    booking_closed_on: z.string().optional(),
    allocation_code: z.enum(["CA", "HK", "HL", "HN", "KK", "LL", "NA", "NL", "NN", "SS", "UN", "UU", "QU", "KL", "KC", "LA", "XX", "OF", "NS", "CN"]).optional(),
    active_allotment_business_id: z.string().optional(),
    pieces: z.number().int().positive().optional(),
    departure_offset_days: z.number().int().nonnegative().default(0),
    arrival_offset_days: z.number().int().nonnegative().default(0),
    transport_means_id: z.number().int().optional(),
    booking_id: z.number().int().optional(),
    sequence: z.number().int().default(1),
    status: z.enum(["ACTIVE", "CANCELLED", "COMPLETED"]).default("ACTIVE"),
    transport_type: z.enum(["AIR", "ROAD", "RAIL", "SEA"]).default("AIR"),
    transport_details: z.record(z.any()).optional(),
    carrier_code: z.string().optional(),
    vehicle_number: z.string().optional(),
  }),
  updateSchema: z.object({
    onload_location_code: z.string().optional(),
    offload_location_code: z.string().optional(),
    booking_closed_on: z.string().optional(),
    allocation_code: z.enum(["CA", "HK", "HL", "HN", "KK", "LL", "NA", "NL", "NN", "SS", "UN", "UU", "QU", "KL", "KC", "LA", "XX", "OF", "NS", "CN"]).optional(),
    active_allotment_business_id: z.string().optional(),
    pieces: z.number().int().positive().optional(),
    departure_offset_days: z.number().int().nonnegative().optional(),
    arrival_offset_days: z.number().int().nonnegative().optional(),
    transport_means_id: z.number().int().optional(),
    booking_id: z.number().int().optional(),
    sequence: z.number().int().optional(),
    status: z.enum(["ACTIVE", "CANCELLED", "COMPLETED"]).optional(),
    transport_type: z.enum(["AIR", "ROAD", "RAIL", "SEA"]).optional(),
    transport_details: z.record(z.any()).optional(),
    carrier_code: z.string().optional(),
    vehicle_number: z.string().optional(),
  }),
  allow: { list: true, get: true, create: true, update: true, delete: true },
  rbac: ({ roles, method }) => (roles.includes("admin") ? true : method !== "DELETE"),
};

export default bookingSegment;
